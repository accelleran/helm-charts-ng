# Default values for xapp_core.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

### Global variable indicating the dRAX machine IP
global:
  kubeIp: "172.31.36.102"
  draxNodeSelectorEnabled: "false"
  draxName: "main"

### The xApp Framework elements values
# This is the xApp Redis DB
xapp-redis:
  # AUTOGENERATED DONT EDIT
  enabled: true

  draxNodeSelectorEnabled: "{{ .Values.global.draxNodeSelectorEnabled }}"
  draxNodeSelector:
    draxName: "{{ .Values.global.draxName }}"

### The xApp Core values
replicaCount: 1

### Image settings for the xApp Core
image:
  repository: accelleran/xapp-framework-package
  pullPolicy: IfNotPresent
  tag: ""

initImage:
  repository: accelleran/acc-generic-img
  pullPolicy: IfNotPresent
  tag: "latest"

imagePullSecrets:
  - name: accelleran-secret

### Developer mode options
developerMode:
  enabled: false
  hostPath: ""
  devPassword: "password1!"

nameOverride: ""
fullnameOverride: ""

xappFrameworkConfig:
  #  # Enter the description of the xApp
  #  description: "An example xApp"
  #
  #  # AUTOGENERATED DON'T EDIT
  #  redisUrl: "{{ .Release.Name }}-xapp-redis.{{ .Release.Namespace }}"
  #
  #  # AUTOGENERATED DON'T EDIT
  #  redisPort: 6379

  # If you want to flush the existing config, and use the config on helm install, enable the following
  flushOnDeployment: false

### Define the xapp_endpoints.json
xappEnpoints:
  REDIS_URL: "redis://{{ .Release.Name }}-xapp-redis.{{ .Release.Namespace }}:6379"
  KAFKA_URL: "kafka://{{ .Values.global.kubeIp }}:31090"
  API_URL: "http://{{ .Values.global.kubeIp }}:31315"
  NATS_URL: "nats://{{ .Values.global.kubeIp }}:31000"
  NATS_URL_5G: "nats://{{ .Values.global.kubeIp }}:31100"

### Define the xapp_config.json
# xappConfig: []
# LOG_LEVEL: 20
# example_slider: 50
# someUrl: "nats://{{ .Values.global.kubeIp }}:31000"
# boolean: false

serviceAccount:
  # Specifies whether a service account should be created
  create: false
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name:

podSecurityContext:
  {}
  # fsGroup: 2000

securityContext:
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  runAsNonRoot: true
  runAsUser: 1000

restService:
  enabled: true
  type: NodePort
  port: 8888
  name: "xapp-api"
  # nodePort: 32223

sshService:
  name: "xapp-dev-ssh"
  type: NodePort
  port: 22
  # nodePort: 30953

udpService:
  enabled: false
  name: "xapp-udp"
  port: 9090
  # nodePort: 30130

tcpService:
  enabled: false
  name: "xapp-tcp"
  port: 80
  # nodePort: 32222

ingress:
  enabled: false
  annotations:
    {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths: []
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources:
  {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

nodeSelector: {}

draxNodeSelectorEnabled: "{{ .Values.global.draxNodeSelectorEnabled }}"
draxNodeSelector:
  draxName: "{{ .Values.global.draxName }}"

tolerations: []

affinity: {}
